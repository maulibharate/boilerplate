{"version":3,"sources":["Utils/Constants.js","Components/Validations/registerValidation.js","Assets/Images/user_background_img.jpg","Components/Register/Register.js","Components/Register/RegisterContainer.js","Components/Login/Login.js","Components/Validations/loginValidation.js","Components/Login/LoginContainer.js","Assets/logo.jpg","Components/CommonComponents/Header/header.js","Components/Dashboard/Dashboard.js","Components/Dashboard/DashboardContainer.js","Components/Logout/Logout.js","Components/Logout/LogoutContainer.js","Routes/Routes.js","Routes/Router.js","reducer/UseReducer.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["CONFIG","login","register","dashboard","logout","IMAGE_ALT","API_URL","HTTP_METHODS","GET","POST","HTTP_CODES","validationSchema","Yup","firstName","required","min","max","lastName","email","phone","matches","password","confirmPassword","oneOf","InputText","label","props","useField","field","meta","className","touched","error","Register","initialValues","onSubmit","values","Container","Card","CardImg","src","bgImage","CardBody","CardTitle","tag","to","Button","name","type","placeholder","RegisterContainer","history","useHistory","a","fetch","method","headers","body","JSON","stringify","res","json","data","status","window","alert","console","log","push","LoginContainer","header","Row","Col","md","class","Logo","alt","Dashboard","userData","DashboardContainer","useState","setUserData","callDashboardPage","Accept","credentials","Error","useEffect","Logout","LogoutContainer","useContext","UserContext","dispatch","state","then","payload","replace","REQUEST_SUCCEEDED","catch","err","Routers","renderRoutes","exact","path","this","Component","Router","renderRouter","reducer","action","createContext","App","useReducer","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.620bf922.chunk.js","sourcesContent":["export const CONFIG = {\r\n    path: {\r\n        login: \"/\",\r\n        register: '/register',\r\n        dashboard: '/dashboard',\r\n        logout: '/logout'\r\n    }\r\n}\r\n\r\nexport const IMAGE_ALT = {\r\n    LOGO_IMAGE: 'logo image'\r\n}\r\n\r\nexport const API_URL = {\r\n    DASHBOARD: '/dashboard',\r\n    LOGIN: '/login',\r\n    LOGOUT: '/logout',\r\n    REGISTER: '/register'\r\n}\r\n\r\nexport const HTTP_METHODS = {\r\n    GET: 'GET',\r\n    POST: 'POST'\r\n}\r\n\r\nexport const HTTP_CODES = {\r\n    REQUEST_SUCCEEDED: 200,\r\n    BAD_REQUEST: 400,\r\n    UNPROCESSABLE_ENTITY : 422,\r\n}\r\n\r\nexport const REGEX = {\r\n    PHONE_NUMBER: /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n}","import * as Yup from \"yup\";\r\nimport { REGEX } from \"../../Utils/Constants\";\r\n\r\nexport const validationSchema = Yup.object({\r\n    firstName: Yup.string()\r\n      .required('Required')\r\n      .min(3, 'Must be 3 characters or greater')\r\n      .max(15, 'Max be 15 characters or less'),\r\n    lastName: Yup.string()\r\n      .required('Required')\r\n      .min(3, 'Must be 3 characters or greater')\r\n      .max(15, 'Max be 15 characters or less'),\r\n    email: Yup.string()\r\n      .required('Required')\r\n      .email('Invalid email address'),\r\n    phone: Yup.string()\r\n      .matches(REGEX.PHONE_NUMBER, 'Phone number is not valid'),\r\n    password: Yup.string()\r\n      .min(3, 'Must be 8 characters or greater')\r\n      .max(15, 'Max be 15 characters or less')\r\n      .required('Required'),\r\n    confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n    .required('Required'),\r\n  })","export default __webpack_public_path__ + \"static/media/user_background_img.dae8e2b3.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Container, Card, CardTitle, CardBody, CardImg, Button  } from 'reactstrap';\r\nimport { Formik, Form, useField } from 'formik';\r\n//images\r\nimport bgImage from \"../../Assets/Images/user_background_img.jpg\"\r\n\r\n//css file\r\nimport \"./Register.css\"\r\n\r\n\r\nconst InputText = ({ label, ...props }) => {\r\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n    // which we can spread on <input>. We can use field meta to show an error\r\n    // message if the field is invalid and it has been touched (i.e. visited)\r\n    const [field, meta] = useField(props); /* is a custom React hook that will automagically help you hook up inputs to Formik. \r\n                                            You can and should use it to build your own custom input primitives */\r\n    return (\r\n      <>\r\n        {/* <label htmlFor={props.id || props.name}>{label}</label> */}\r\n        <input className=\"text-input\" {...field} {...props} />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"error mt-n3\">{meta.error}</div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n  \r\nconst Register = (props) => {\r\n  return (\r\n    <Formik\r\n    initialValues={props.initialValues}\r\n    validationSchema={props.validationSchema}\r\n    onSubmit={ (values) => props.onSubmit(values)}\r\n  >\r\n      <Form>\r\n        <section className=\"userSection\">\r\n          <Container className='register'>\r\n            <Card>\r\n                <CardImg className=\"bgImage\" src={bgImage} />\r\n\r\n                <CardBody className=\"py-5 px-5\">\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <CardTitle tag=\"h5\" className=\"mb-0\">Registration Info</CardTitle>\r\n                        <NavLink to=\"/\">\r\n                          <Button className='registerButton'>login now</Button>\r\n                        </NavLink>\r\n                    </div>\r\n                    <InputText\r\n                      label=\"First Name\"\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                      className='form-control my-4'\r\n                    />\r\n\r\n                    <InputText\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      placeholder=\"Last Name\"\r\n                      className='form-control my-4'\r\n                    />\r\n\r\n                    <InputText\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      className='form-control my-4'\r\n                      // autocomplete=\"off\"\r\n                    />\r\n\r\n                    <InputText\r\n                      label=\"Phone Number\"\r\n                      name=\"phone\"\r\n                      type=\"number\"\r\n                      placeholder=\"Phone Number\"\r\n                      className='form-control my-4'\r\n                    />\r\n\r\n                    <InputText\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      className='form-control my-4'\r\n                    />\r\n                    <InputText\r\n                      label=\"Confirm Password\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      className='form-control my-4'\r\n                    />\r\n                    <button type=\"submit\" className='registerButton w-100 mt-4 btn btn-secondary'>Submit</button>\r\n                </CardBody>\r\n              </Card>\r\n            </Container>\r\n        </section>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { HTTP_METHODS, API_URL, HTTP_CODES, CONFIG } from '../../Utils/Constants';\r\n\r\nimport { validationSchema } from '../Validations/registerValidation';\r\n\r\nimport Register from './Register';\r\n\r\nfunction RegisterContainer() {\r\n    const history = useHistory();\r\n\r\n    const initialValues = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      }\r\n\r\n    const onSubmit = async (values) => {\r\n        const { firstName, lastName, email, phone, password, confirmPassword } = values;\r\n      \r\n        const res = await fetch(API_URL.REGISTER, {\r\n          method: HTTP_METHODS.POST,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            firstName, lastName, email, phone, password, confirmPassword\r\n          })\r\n        })\r\n  \r\n        const data = await res.json();\r\n        if (data.status === HTTP_CODES.UNPROCESSABLE_ENTITY || !data) {\r\n          window.alert('Invalid Registation');\r\n          console.log('Invalid Registation');\r\n        } else {\r\n          window.alert('Registation Successfull');\r\n          console.log('Registation Successfull');\r\n  \r\n          history.push(CONFIG.path.login)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Register \r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterContainer;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Container, Card, CardTitle, CardBody, CardImg, Button  } from 'reactstrap';\r\nimport { Formik, Form, useField } from 'formik';\r\n\r\n//images\r\nimport bgImage from \"../../Assets/Images/user_background_img.jpg\"\r\n\r\n//css file\r\nimport \"./Login.css\"\r\n\r\n\r\nconst InputText = ({ label, ...props }) => {\r\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n    // which we can spread on <input>. We can use field meta to show an error\r\n    // message if the field is invalid and it has been touched (i.e. visited)\r\n    const [field, meta] = useField(props); /* is a custom React hook that will automagically help you hook up inputs to Formik. \r\n                                            You can and should use it to build your own custom input primitives */\r\n    return (\r\n      <>\r\n        {/* <label htmlFor={props.id || props.name}>{label}</label> */}\r\n        <input className=\"text-input\" {...field} {...props} />\r\n        {meta.touched && meta.error ? (\r\n          <div className=\"error mt-n3\">{meta.error}</div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\nconst login = (props) => {\r\n\r\n  return (\r\n    <Formik\r\n        initialValues={props.initialValues}\r\n        validationSchema={props.validationSchema}\r\n        onSubmit={ (values) =>  props.onSubmit(values) }\r\n    >\r\n      <Form>\r\n        <section className=\"userSection\">\r\n          <Container className='login'>\r\n            <Card>\r\n                <CardImg className=\"bgImage\" src={bgImage} />\r\n\r\n                <CardBody className=\"py-5 px-5\">\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <CardTitle tag=\"h5\" className=\"mb-0\">Login Info</CardTitle>\r\n                        <NavLink to=\"/Register\">\r\n                          <Button className='loginButton'>Register now</Button>\r\n                        </NavLink>\r\n                    </div>\r\n                    <InputText\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      className='form-control my-4'\r\n                      // autocomplete=\"off\"\r\n                    />\r\n\r\n                    <InputText\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      className='form-control my-4'\r\n                    />\r\n\r\n                    <button type=\"submit\" className='loginButton w-100 mt-4 btn btn-secondary'>Login</button>\r\n                </CardBody>\r\n              </Card>\r\n            </Container>\r\n        </section>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default login;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .required('Required')\r\n        .email('Invalid email address'),\r\n    password: Yup.string()\r\n        .min(3, 'Must be 8 characters or greater')\r\n        .max(15, 'Max be 15 characters or less')\r\n        .required('Required'),\r\n    })","import React from 'react';\r\n\r\nimport Login from './Login';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { API_URL, HTTP_METHODS, HTTP_CODES, CONFIG } from '../../Utils/Constants';\r\n\r\nimport { validationSchema } from '../Validations/loginValidation'\r\n\r\nfunction LoginContainer() {\r\n    const history = useHistory();\r\n\r\n    const initialValues = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n\r\n    const onSubmit = async (values) => {\r\n        const { email, password } = values;\r\n\r\n        const res = await fetch(API_URL.LOGIN, {\r\n            method: HTTP_METHODS.POST,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email, password\r\n            })\r\n        })\r\n\r\n        const data = await res.json();\r\n            if(res.status === HTTP_CODES.BAD_REQUEST || !data) {\r\n            window.alert(\"Invalid Credentials\");\r\n        } else {\r\n            // dispatch({type:'USER', payload:true})\r\n            console.log('Login Successfull');\r\n            history.push(CONFIG.path.dashboard);\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <div>\r\n           <Login \r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n           /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginContainer\r\n","export default __webpack_public_path__ + \"static/media/logo.1f952807.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport { IMAGE_ALT, CONFIG } from '../../../Utils/Constants';\r\n\r\nimport './header.css';\r\n\r\n// import images\r\nimport Logo from '../../../Assets/logo.jpg';\r\n\r\nconst header = () => {\r\n    return (\r\n        <section className='header p-2'>\r\n            <Row className='d-flex align-items-center'>\r\n                <Col md=\"4\" >\r\n                    <div class=\"logoDiv\">\r\n                        <img src={Logo} className=\"logo\" alt={IMAGE_ALT.LOGO_IMAGE}/>\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col className='text-center' md=\"4\">\r\n                    <h3>BoilerPlate</h3>\r\n                </Col>\r\n\r\n                <Col className='text-end' md=\"4\">\r\n                    <div className=\"headerManu\">\r\n                        <span className='px-2'>\r\n                            <NavLink to={CONFIG.path.dashboard}>Home</NavLink>\r\n                        </span>\r\n\r\n                        <span className='px-2'>\r\n                            <NavLink to={CONFIG.path.logout}>logout</NavLink>\r\n                        </span>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default header;","import React from 'react'\r\n\r\nimport Header from '../CommonComponents/Header/header';\r\n\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <section className='Dashboard'>\r\n                <Header />\r\n\r\n                <div class=\"HomeSection\">\r\n                    <h1>Hello { props.userData.firstName }</h1>\r\n                </div>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React, { useEffect, useState } from 'react';\r\nimport  { useHistory } from 'react-router-dom';\r\n\r\nimport { API_URL, HTTP_METHODS, CONFIG, HTTP_CODES } from '../../Utils/Constants';\r\n\r\nimport Dashboard from './Dashboard';\r\n\r\nfunction DashboardContainer() {\r\n\r\n    const history = useHistory();\r\n    const [userData, setUserData] = useState({});\r\n\r\n    const callDashboardPage = async () => {\r\n        try {\r\n            const res = await fetch(API_URL.DASHBOARD, {\r\n                method: HTTP_METHODS.GET,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Accept: \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(data);\r\n            setUserData(data);\r\n\r\n            if(!res.status === HTTP_CODES.REQUEST_SUCCEEDED) {\r\n                const error = new Error(res.error);\r\n                throw error;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            history.push(CONFIG.path.login);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        callDashboardPage();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Dashboard \r\n                userData={userData}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardContainer;\r\n","import React from 'react';\r\n\r\nconst Logout = () => {\r\n\r\n    return (\r\n        <>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout;","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { HTTP_METHODS, API_URL } from '../../Utils/Constants';\r\nimport { UserContext  } from '../App/App';\r\n\r\nimport Logout from './Logout';\r\n\r\nfunction LogoutContainer() {\r\n\r\n    const {state, dispatch} = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        fetch(API_URL.LOGOUT, {\r\n            method: HTTP_METHODS.GET,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then((res) => {\r\n            dispatch({type:'USER', payload:false})\r\n            history.push('/', { replace: true});\r\n            if(res.status !== HTTP_METHODS.REQUEST_SUCCEEDED) {\r\n                const error = new Error(res.error);\r\n                throw error;\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Logout />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutContainer\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { CONFIG } from \"../Utils/Constants\";\r\n\r\nimport RegisterContainer from '../Components/Register/RegisterContainer';\r\nimport LoginContainer from '../Components/Login/LoginContainer';\r\nimport DashboardContainer from '../Components/Dashboard/DashboardContainer';\r\nimport LogoutContainer from '../Components/Logout/LogoutContainer';\r\n\r\n\r\nexport default class Routers extends Component {\r\n\r\n    renderRoutes = () => {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path={CONFIG.path.login}>\r\n                        <LoginContainer />\r\n                    </Route>\r\n\r\n                    <Route path={CONFIG.path.register}>\r\n                        <RegisterContainer />\r\n                    </Route>\r\n\r\n                    <Route path={CONFIG.path.dashboard}>\r\n                        <DashboardContainer />\r\n                    </Route>\r\n\r\n                    <Route path={CONFIG.path.logout}>\r\n                        <LogoutContainer />\r\n                    </Route>\r\n                </Switch>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.renderRoutes()\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Routes from \"./Routes\";\r\n\r\nexport class Router extends Component {\r\n\r\n    renderRouter = () => {\r\n        return (\r\n            <Routes />\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            this.renderRouter()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;\r\n","export const  initialState = null;\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    if(action.type === 'USER') {\r\n        return action.payload;\r\n    }\r\n\r\n    return state;\r\n}","import React, { createContext, useReducer } from 'react'\nimport Router from '../../Routes/Router'\n\nimport './App.css'\nimport { initialState, reducer } from '../../reducer/UseReducer';\n\nexport const UserContext = createContext();\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <UserContext.Provider value={{state, dispatch}}>\n        <Router />\n      </UserContext.Provider>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n \nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}